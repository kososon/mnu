<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kalkulator Tonase Keramik MNU Pekanbaru</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #007bff; /* Blue */
            --secondary-color: #28a745; /* Green */
            --accent-color: #ffc107; /* Yellow */
            --danger-color: #dc3545; /* Red */
            --text-dark: #343a40;
            --text-light: #f8f9fa;
            --bg-light: #ffffff;
            --bg-dark: #e9ecef;
            --border-color: #ced4da;
            --shadow-light: rgba(0, 0, 0, 0.1);
        }

        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
            background-color: var(--bg-dark);
            color: var(--text-dark);
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            overflow-x: hidden;
        }

        .container {
            width: 100%;
            max-width: 450px; /* Typical phone width */
            margin: 0 auto;
            padding: 20px;
            box-sizing: border-box;
            background-color: var(--bg-light);
            box-shadow: 0 4px 15px var(--shadow-light);
            border-radius: 10px;
            margin-top: 20px;
            margin-bottom: 20px;
        }

        h1, h2 {
            text-align: center;
            color: var(--primary-color);
            margin-bottom: 25px;
            font-weight: 700;
        }

        /* --- Forms & Inputs --- */
        .form-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
            color: var(--text-dark);
        }

        input[type="text"],
        input[type="password"],
        input[type="number"],
        select {
            width: calc(100% - 20px);
            padding: 12px 10px;
            margin-bottom: 10px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            box-sizing: border-box;
            font-size: 16px;
            transition: all 0.3s ease;
            background-color: #f0f4f8;
        }

        input[type="text"]:focus,
        input[type="password"]:focus,
        input[type="number"]:focus,
        select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
            outline: none;
        }

        /* --- Buttons --- */
        .btn {
            display: inline-block;
            width: 100%;
            padding: 12px 20px;
            font-size: 18px;
            font-weight: 600;
            text-align: center;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
            margin-top: 10px;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: var(--text-light);
        }

        .btn-primary:hover {
            background-color: #0056b3;
            transform: translateY(-2px);
        }

        .btn-secondary {
            background-color: var(--secondary-color);
            color: var(--text-light);
        }

        .btn-secondary:hover {
            background-color: #218838;
            transform: translateY(-2px);
        }

        .btn-danger {
            background-color: var(--danger-color);
            color: var(--text-light);
        }

        .btn-danger:hover {
            background-color: #c82333;
            transform: translateY(-2px);
        }

        .btn-warning {
            background-color: var(--accent-color);
            color: var(--text-dark);
        }
        .btn-warning:hover {
            background-color: #e0a800;
            transform: translateY(-2px);
        }


        .btn-logout {
            background-color: #6c757d;
            color: var(--text-light);
            margin-top: 20px;
        }

        .btn-logout:hover {
            background-color: #5a6268;
            transform: translateY(-2px);
        }

        /* --- Login Section --- */
        #login-section {
            display: block;
            padding: 30px;
            background: linear-gradient(135deg, #f0f9ff, #c9e0ff);
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }

        /* --- Calculator Section --- */
        #calculator-section {
            display: none;
            padding: 20px;
            border-radius: 10px;
            background-color: var(--bg-light);
        }

        .item-row {
            display: flex;
            flex-wrap: wrap;
            margin-bottom: 15px;
            padding: 10px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            background-color: var(--bg-dark);
            position: relative;
        }

        .item-row .form-group {
            flex: 1 1 100%; /* Take full width on small screens */
            margin-bottom: 10px;
        }

        .item-row .form-group:last-child {
            margin-bottom: 0;
        }

        .item-row input[type="text"].search-input {
            width: 100%;
            padding-right: 35px; /* Space for clear button */
        }

        .item-row .autocomplete-results {
            position: absolute;
            background-color: var(--bg-light);
            border: 1px solid var(--border-color);
            max-height: 150px;
            overflow-y: auto;
            z-index: 1000;
            width: calc(100% - 20px); /* Adjust for padding */
            left: 10px; /* Align with input */
            box-shadow: 0 2px 8px var(--shadow-light);
            border-radius: 0 0 8px 8px;
        }

        .autocomplete-results div {
            padding: 10px;
            cursor: pointer;
            border-bottom: 1px solid #eee;
            color: var(--text-dark);
        }

        .autocomplete-results div:hover {
            background-color: var(--bg-dark);
        }

        .remove-item-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: var(--danger-color);
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            font-size: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .remove-item-btn:hover {
            background-color: #c82333;
        }

        #add-item-btn {
            margin-top: 15px;
            width: auto;
            padding: 10px 20px;
            background-color: var(--secondary-color);
        }
        #add-item-btn:hover {
            background-color: #218838;
        }

        #total-tonase {
            text-align: center;
            margin-top: 25px;
            padding: 15px;
            background-color: #e6f7ff; /* Light blue background */
            border: 1px solid var(--primary-color);
            border-radius: 10px;
            font-size: 20px;
            font-weight: 700;
            color: var(--primary-color);
        }

        /* --- Admin Section (Ceramic Data Management) --- */
        #admin-section {
            display: none; /* Hidden by default */
            margin-top: 30px;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 10px;
            border: 1px solid var(--border-color);
        }

        #ceramic-list {
            margin-top: 15px;
            max-height: 300px;
            overflow-y: auto;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            background-color: var(--bg-light);
        }

        .ceramic-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #eee;
            color: var(--text-dark);
        }

        .ceramic-item:last-child {
            border-bottom: none;
        }

        .ceramic-item span {
            flex-grow: 1;
        }

        .ceramic-item button {
            margin-left: 10px;
            padding: 6px 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
        }

        .ceramic-item .edit-btn {
            background-color: var(--accent-color);
            color: var(--text-dark);
        }

        .ceramic-item .edit-btn:hover {
            background-color: #e0a800;
        }

        .ceramic-item .delete-btn {
            background-color: var(--danger-color);
            color: var(--text-light);
        }

        .ceramic-item .delete-btn:hover {
            background-color: #c82333;
        }

        #add-ceramic-form {
            margin-top: 20px;
            padding-top: 15px;
            border-top: 1px dashed var(--border-color);
        }

        #add-ceramic-form input {
            margin-bottom: 10px;
        }

        /* --- Footer --- */
        .footer {
            text-align: center;
            padding: 20px;
            margin-top: auto;
            color: #6c757d;
            font-size: 14px;
        }

        /* --- Responsive Adjustments --- */
        @media (max-width: 480px) {
            .container {
                padding: 15px;
                margin: 10px auto;
                border-radius: 0; /* Full width on very small screens */
            }

            h1, h2 {
                font-size: 24px;
                margin-bottom: 20px;
            }

            .btn {
                font-size: 16px;
                padding: 10px 15px;
            }

            input {
                font-size: 14px;
                padding: 10px 8px;
            }

            .item-row {
                flex-direction: column;
            }

            .item-row .form-group {
                margin-bottom: 10px;
            }
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>
</head>
<body>
    <div class="container">
        <h1>Kalkulator Tonase Keramik</h1>
        <h2>PT Mitra Nuansa Utama Cab Pekanbaru</h2>

        <div id="login-section">
            <h3>Login</h3>
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" placeholder="Masukkan Username">
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" placeholder="Masukkan Password">
            </div>
            <button class="btn btn-primary" onclick="login()">Login</button>
        </div>

        <div id="calculator-section">
            <div id="items-container">
                </div>
            <button class="btn btn-secondary" id="add-item-btn" onclick="addItemRow()">Tambah Item Keramik</button>
            <div id="total-tonase">
                Total Tonase: <span id="tonase-display">0.00</span> Ton
            </div>
            <button class="btn btn-warning" onclick="exportToPdf()">Export ke PDF</button>
            <button class="btn btn-logout" onclick="logout()">Logout</button>
        </div>

        <div id="admin-section">
            <h2>Manajemen Data Keramik</h2>
            <div id="ceramic-list">
                </div>

            <h3>Tambah/Edit Keramik</h3>
            <div id="add-ceramic-form">
                <div class="form-group">
                    <label for="ceramicName">Nama Keramik:</label>
                    <input type="text" id="ceramicName" placeholder="Contoh: ASIA TILE FT - 25X25">
                </div>
                <div class="form-group">
                    <label for="ceramicWeight">Berat (kg):</label>
                    <input type="number" id="ceramicWeight" step="0.01" placeholder="Contoh: 13.80">
                </div>
                <button class="btn btn-primary" onclick="addOrUpdateCeramic()">Simpan Keramik</button>
                <button class="btn btn-danger" onclick="clearCeramicForm()">Batal Edit</button>
            </div>
        </div>
    </div>

    <div class="footer">
        Powered by: Wilson Susanto V2.1
    </div>

    <script>
        let ceramicData = [
            { name: "ASIA TILE FT - 25X25", weight: 13.80 },
            { name: "ASIA TILE FT - 30X30", weight: 13.75 },
            { name: "ASIA TILE FT - 40X40", weight: 15.00 },
            { name: "ASIA TILE FT - 50X50", weight: 17.00 },
            { name: "ASIA TILE WT - 25X40", weight: 14.00 },
            { name: "ASIA TILE WT - 20X40", weight: 15.70 },
            { name: "PLATINUM FT - 30X30", weight: 13.75 },
            { name: "PLATINUM FT - 40X40", weight: 15.00 },
            { name: "PLATINUM FT - 50X50", weight: 17.00 },
            { name: "PLATINUM FT - 50X50 (REC)", weight: 17.80 },
            { name: "PLATINUM FT - 60X60", weight: 27.00 },
            { name: "PLATINUM FT - 60X60 WB", weight: 25.00 },
            { name: "PLATINUM FT - 80X80 WB", weight: 40.70 },
            { name: "PLATINUM WT - 25X40", weight: 14.00 },
            { name: "PLATINUM WT - 25X50", weight: 14.70 },
            { name: "PLATINUM WT - 30X60", weight: 17.00 },
            { name: "PLATINUM WT - 30X60 WB", weight: 15.70 },
            { name: "PLATINUM WT - 30X60 REC", weight: 16.00 },
            { name: "PLATINUM WT - 40X80 WB", weight: 23.00 },
            { name: "INFINITI - 60x60 GLOSSY", weight: 28.78 },
            { name: "INFINITI- 60x60 MATT", weight: 28.70 },
            { name: "INFINITI - 60x120 GLOSSY", weight: 37.68 },
            { name: "INFINITI - 60x120 MATT", weight: 37.86 },
            { name: "INFINITI - 80x80 GLOSSY", weight: 49.29 },
            { name: "INFINITI - 80x80 MATT", weight: 49.10 },
            { name: "INFINITI - 100x100 GLOSSY", weight: 53.12 },
            { name: "INFINITI - 100x100 MATT", weight: 53.22 },
            { name: "TITANIUM - 20x120 MATT", weight: 27.57 },
            { name: "TITANIUM - 60x120 GLOSSY", weight: 28.06 },
            { name: "TITANIUM - 60x120 MATT", weight: 27.94 },
            { name: "TITANIUM - 80x120 GLOSSY", weight: 37.65 },
            { name: "TITANIUM - 80x120 MATT", weight: 37.21 },
            { name: "TITANIUM - 100x100 GLOSSY", weight: 39.64 },
            { name: "TITANIUM - 100x100 MATT", weight: 38.04 },
            { name: "TITANIUM - 120x120 GLOSSY", weight: 55.92 },
            { name: "TITANIUM - 120x120 MATT", weight: 55.24 }
        ];

        let currentUserRole = null;
        let editingCeramicIndex = -1; // To track which ceramic is being edited

        const loginSection = document.getElementById('login-section');
        const calculatorSection = document.getElementById('calculator-section');
        const adminSection = document.getElementById('admin-section');
        const itemsContainer = document.getElementById('items-container');
        const tonaseDisplay = document.getElementById('tonase-display');
        const ceramicListDiv = document.getElementById('ceramic-list');
        const ceramicNameInput = document.getElementById('ceramicName');
        const ceramicWeightInput = document.getElementById('ceramicWeight');

        // Function to handle login
        function login() {
            const username = document.getElementById('username').value.toLowerCase();
            const password = document.getElementById('password').value.toLowerCase();

            if (username === 'sales' && password === 'sales') {
                currentUserRole = 'sales';
                showCalculator();
            } else if (username === 'wilson' && password === 'wilson') {
                currentUserRole = 'wilson';
                showCalculator();
                showAdminSection();
                renderCeramicList();
            } else {
                alert('Khusus MNU saja !!!');
            }
        }

        // Function to show calculator section
        function showCalculator() {
            loginSection.style.display = 'none';
            calculatorSection.style.display = 'block';
            addItemRow(); // Add initial item row for calculation
            calculateTotalTonnage();
        }

        // Function to show admin section (only for 'wilson')
        function showAdminSection() {
            adminSection.style.display = 'block';
        }

        // Function to logout
        function logout() {
            currentUserRole = null;
            loginSection.style.display = 'block';
            calculatorSection.style.display = 'none';
            adminSection.style.display = 'none';
            document.getElementById('username').value = '';
            document.getElementById('password').value = '';
            itemsContainer.innerHTML = ''; // Clear calculator items
        }

        // Function to add a new item row to the calculator
        function addItemRow(initialCeramicName = '', initialQuantity = '') {
            const itemRow = document.createElement('div');
            itemRow.classList.add('item-row');
            itemRow.innerHTML = `
                <button class="remove-item-btn" onclick="removeItemRow(this)">X</button>
                <div class="form-group">
                    <label>Jenis Keramik:</label>
                    <input type="text" class="ceramic-search-input" placeholder="Cari Jenis Keramik" value="${initialCeramicName}">
                    <input type="hidden" class="ceramic-weight" value="0">
                    <div class="autocomplete-results"></div>
                </div>
                <div class="form-group">
                    <label>Jumlah (pcs):</label>
                    <input type="number" class="ceramic-qty" min="1" value="${initialQuantity}">
                </div>
            `;
            itemsContainer.appendChild(itemRow);

            const searchInput = itemRow.querySelector('.ceramic-search-input');
            const qtyInput = itemRow.querySelector('.ceramic-qty');
            const hiddenWeightInput = itemRow.querySelector('.ceramic-weight');
            const autocompleteResultsDiv = itemRow.querySelector('.autocomplete-results');

            // Event listener for search input
            searchInput.addEventListener('input', (e) => {
                const searchTerm = e.target.value.toLowerCase();
                autocompleteResultsDiv.innerHTML = '';
                if (searchTerm.length > 1) {
                    const filteredCeramics = ceramicData.filter(ceramic =>
                        ceramic.name.toLowerCase().includes(searchTerm)
                    );
                    filteredCeramics.forEach(ceramic => {
                        const resultDiv = document.createElement('div');
                        resultDiv.textContent = ceramic.name;
                        resultDiv.addEventListener('click', () => {
                            searchInput.value = ceramic.name;
                            hiddenWeightInput.value = ceramic.weight;
                            autocompleteResultsDiv.innerHTML = ''; // Clear results
                            calculateTotalTonnage();
                        });
                        autocompleteResultsDiv.appendChild(resultDiv);
                    });
                } else {
                    autocompleteResultsDiv.innerHTML = '';
                }
            });

            // Event listeners for quantity and search input changes to re-calculate
            qtyInput.addEventListener('input', calculateTotalTonnage);
            searchInput.addEventListener('change', calculateTotalTonnage); // In case user types and moves away without selecting

            // Clear autocomplete results when input loses focus (with a slight delay)
            searchInput.addEventListener('blur', () => {
                setTimeout(() => {
                    autocompleteResultsDiv.innerHTML = '';
                }, 200); // Small delay to allow click on results
            });
        }

        // Function to remove an item row
        function removeItemRow(button) {
            const itemRow = button.closest('.item-row');
            itemRow.remove();
            calculateTotalTonnage();
        }

        // Function to calculate total tonnage
        function calculateTotalTonnage() {
            let totalWeightKg = 0;
            const itemRows = document.querySelectorAll('.item-row');

            itemRows.forEach(row => {
                const ceramicName = row.querySelector('.ceramic-search-input').value;
                const quantity = parseFloat(row.querySelector('.ceramic-qty').value);
                const ceramicWeight = parseFloat(row.querySelector('.ceramic-weight').value); // Use the hidden weight

                if (ceramicName && quantity > 0 && !isNaN(ceramicWeight) && ceramicWeight > 0) {
                    totalWeightKg += ceramicWeight * quantity;
                }
            });

            const totalTonase = totalWeightKg / 1000; // Convert kg to tons
            tonaseDisplay.textContent = totalTonase.toFixed(2); // Display with 2 decimal places
        }

        // Function to render ceramic list for admin
        function renderCeramicList() {
            ceramicListDiv.innerHTML = '';
            ceramicData.forEach((ceramic, index) => {
                const ceramicItem = document.createElement('div');
                ceramicItem.classList.add('ceramic-item');
                ceramicItem.innerHTML = `
                    <span>${ceramic.name} - ${ceramic.weight.toFixed(2)} kg</span>
                    <div>
                        <button class="edit-btn" onclick="editCeramic(${index})">Edit</button>
                        <button class="delete-btn" onclick="deleteCeramic(${index})">Hapus</button>
                    </div>
                `;
                ceramicListDiv.appendChild(ceramicItem);
            });
        }

        // Function to add or update ceramic data
        function addOrUpdateCeramic() {
            const name = ceramicNameInput.value.trim();
            const weight = parseFloat(ceramicWeightInput.value);

            if (!name || isNaN(weight) || weight <= 0) {
                alert('Nama keramik dan berat harus diisi dengan benar.');
                return;
            }

            if (editingCeramicIndex === -1) {
                // Add new ceramic
                ceramicData.push({ name: name, weight: parseFloat(weight.toFixed(2)) });
            } else {
                // Update existing ceramic
                ceramicData[editingCeramicIndex] = { name: name, weight: parseFloat(weight.toFixed(2)) };
                editingCeramicIndex = -1; // Reset editing state
            }
            clearCeramicForm();
            renderCeramicList();
            calculateTotalTonnage(); // Recalculate if ceramic data changes
        }

        // Function to clear ceramic form
        function clearCeramicForm() {
            ceramicNameInput.value = '';
            ceramicWeightInput.value = '';
            editingCeramicIndex = -1;
        }

        // Function to edit ceramic
        function editCeramic(index) {
            const ceramic = ceramicData[index];
            ceramicNameInput.value = ceramic.name;
            ceramicWeightInput.value = ceramic.weight;
            editingCeramicIndex = index;
        }

        // Function to delete ceramic
        function deleteCeramic(index) {
            if (confirm(`Anda yakin ingin menghapus ${ceramicData[index].name}?`)) {
                ceramicData.splice(index, 1);
                renderCeramicList();
                calculateTotalTonnage(); // Recalculate after deletion
            }
        }

        // Function to export to PDF
        async function exportToPdf() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            doc.setFontSize(16);
            doc.text("Laporan Tonase Keramik", 105, 20, null, null, "center");
            doc.setFontSize(12);
            doc.text("PT Mitra Nuansa Utama Cab Pekanbaru", 105, 27, null, null, "center");
            doc.text(`Tanggal: ${new Date().toLocaleDateString('id-ID')}`, 10, 40);

            const tableData = [];
            let currentTotalWeightKg = 0; // Separate total for PDF
            const itemRows = document.querySelectorAll('.item-row');

            itemRows.forEach(row => {
                const ceramicName = row.querySelector('.ceramic-search-input').value;
                const quantity = parseFloat(row.querySelector('.ceramic-qty').value);
                const ceramicWeightPerUnit = parseFloat(row.querySelector('.ceramic-weight').value);

                if (ceramicName && quantity > 0 && !isNaN(ceramicWeightPerUnit) && ceramicWeightPerUnit > 0) {
                    const itemTotalWeightKg = ceramicWeightPerUnit * quantity;
                    tableData.push([
                        ceramicName,
                        quantity,
                        `${itemTotalWeightKg.toFixed(2)} kg`
                    ]);
                    currentTotalWeightKg += itemTotalWeightKg;
                }
            });

            doc.autoTable({
                startY: 50,
                head: [['Jenis Keramik', 'Kuantitas (pcs)', 'Total Berat (kg)']],
                body: tableData,
                styles: {
                    fontSize: 10,
                    halign: 'center'
                },
                headStyles: {
                    fillColor: [0, 123, 255], /* Primary color */
                    textColor: 255,
                    fontStyle: 'bold'
                },
                columnStyles: {
                    0: { halign: 'left' }
                },
                didDrawPage: function(data) {
                    // Footer
                    let str = "Halaman " + doc.internal.getNumberOfPages();
                    doc.setFontSize(10);
                    doc.text(str, data.settings.margin.left, doc.internal.pageSize.height - 10);
                }
            });

            const finalY = doc.autoTable.previous.finalY; // Get the Y position of the end of the table

            doc.setFontSize(14);
            doc.text(`Total Tonase Keseluruhan: ${(currentTotalWeightKg / 1000).toFixed(2)} Ton`, 10, finalY + 20);

            doc.setFontSize(10);
            doc.text("Powered by: Wilson Susanto V2.1", doc.internal.pageSize.width - 10, doc.internal.pageSize.height - 10, null, null, "right");

            doc.save('Laporan_Tonase_Keramik_MNU.pdf');
        }

        // Initialize by checking if user is logged in (though not persistent in this pure HTML example)
        // For a real application, you'd check a session or local storage.
        // For now, we start with login section.
        document.addEventListener('DOMContentLoaded', () => {
            // Initially, add one row for the calculator.
            // This will be called after a successful login in a real scenario,
            // but for initial display after login, it needs to be there.
            // We ensure it's called only after a successful login.
        });

    </script>
</body>

</html>
